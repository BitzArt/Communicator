@namespace MudBlazor
@typeparam T

<div class="d-flex flex-grow-1 align-center">
    @{ UpdateValue(); }
    <CascadingValue TValue="MudTableSortSelect<T>" Value="this" IsFixed="true">
        <div style="display: none">@ChildContent</div>
        <MudSelect 
            T="MudTableSortSelectItem<T>"
            Placeholder="@Placeholder"
            Variant="InputVariant"
            Margin="InputMargin"
            Clearable="Clearable"
            FullWidth="true"
            Class="@InputClass"
            AnchorOrigin="AnchorOrigin"
            TransformOrigin="TransformOrigin"
            Value="Value"
            ValueChanged="OnValueChangedAsync"
            @ref="_select">
                @foreach (var record in _itemSignatureMap)
                {
                    @if (record.Value is not null)
                    {
                        <MudSelectItem Value="@record.Value">
                            @record.Value.ChildContent
                        </MudSelectItem>
                    }
                }
        </MudSelect>

        @if (!HideSortButton)
        {
            <MudIconButton 
                Icon="@Icons.Material.Filled.Sort"
                Variant="ButtonVariant"
                Size="ButtonSize"
                Class="@ButtonClass"
                Style="@(SortDirection == MudBlazor.SortDirection.Ascending ? string.Empty : "transform: scaleY(-1);")"
                OnClick="ToggleSortDirectionAsync">
            </MudIconButton>
        }
    </CascadingValue>
</div>
